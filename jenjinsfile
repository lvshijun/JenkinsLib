#！groovy

@library('JenkinsLib') _	//加载共享库

def tools = new org.devops.tools()

String workspace = "/opt/jenkins/workspace"
pipeline{
	agent {
		node { label "master"	//指定运行节点的标签或者名称
				customWorkspace "${workspace}"	//指定运行工作目录 （可选）
		}
	}
	options	{
		timestamps（）	//日志输出时间
		skipDefaultCheckout()	//删除隐式checkout scm语句
		disableConcurrentBuilds()	//禁止并行
		timeout(time:1, unit: 'HOURS')	//流水线超时设置1h
	}

	stages{
		//下载代码
		stage("GetCode"){ //阶段名称
			steps{	//步骤
				timeout(time:5,unit:"MINUTES"){	//步骤超时时间
					script{	//填写运行代码
						println('获取代码')
					}

				}

			}

		}
		//构建
		stage("Build"){
			steps{
				timeout(time:20,unit:"MINUTES"){
					script{
						println('应用打包')
					}
				}
			}
		}
		//代码扫描
		stage("CodeScan"){
			steps{
				timeout(time:30,unit:"MINUTES"){
					script{
						println("代码扫描")
					}
				}
			}
		}



	}

	//构建后操作
	post {
		always	{ //无论流水线或者阶段的完成状态。
			script{
				println("always")
			}
		}
		success	{ //只有当流水线或者阶段状态为”success”运行。
			script{
				currentBuild.description = "\n 构建成功！"
			}
		}
		failure	{ //只有当流水线或者阶段状态为”failure”运行。
			script{
				currentBuild.description = "\n 构建失败！"
			}
		}

		aborted	{ //只有当流水线或者阶段状态为”aborted “运行。例如：手动取消。
			script{
				currentBuild.description = "\n 构建取消！"
			}
		}


	}
}

